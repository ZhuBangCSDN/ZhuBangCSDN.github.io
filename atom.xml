<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog of Alaga</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-10-21T02:47:51.500Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>朱邦政</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络总结</title>
    <link href="http://yoursite.com/2020/10/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/10/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%80%BB%E7%BB%93/</id>
    <published>2020-10-20T04:44:46.000Z</published>
    <updated>2020-10-21T02:47:51.500Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/source/images/timg.jpg" alt=""></p><p><em>计算机网络的知识浩瀚如海，迫于时间没能够一本一本细读，只在有需要的时候才翻阅查找，现做个笔记总结一下常见的知识</em></p><h2 id="TCP-IP-协议结构"><a href="#TCP-IP-协议结构" class="headerlink" title="TCP/IP 协议结构"></a><strong>TCP/IP 协议结构</strong></h2><ul><li>TCP/IP 为分为四层协议，从顶层到底层分别为：<ul><li>应用层：<ul><li>Http（超文本传输协议）</li><li>DNS（域名系统）</li><li>Telnet（远程登陆协议）</li><li>FTP（文件传输协议）</li><li>TFTP（简单文件传输协议）</li><li>SMTP（简单邮件传输协议）</li><li>SNTP（简单网络时间协议）</li></ul></li><li>传输层<ul><li>TCP（传输控制协议）</li><li>UDP（用户数据报协议）</li></ul></li><li>网络层<ul><li>IP（IPv4、IPv6）</li><li>ICMP（Internet 控制报文协议）</li><li>RIP（路由信息协议）</li><li>ARP（地址解析协议）</li><li>RARP（逆向地址解析协议）</li></ul></li><li>网络接口层<ul><li>Ethernet（以太网）</li><li>IEEE 802.3</li></ul></li></ul></li></ul><hr><p><strong>接下来会自顶向下介绍，可能会有缺漏，但尽可能完善</strong></p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><h3 id="DNS-解析"><a href="#DNS-解析" class="headerlink" title="DNS 解析"></a>DNS 解析</h3><ul><li>DNS 解析又叫域名解析，分为递归和迭代两种，通常我们见到的是递归和迭代复合使用的方式。过程如下：<br>比如我们输入“<a href="http://www.baidu.com”" target="_blank" rel="noopener">www.baidu.com”</a><br>1、浏览器输入一个 url 之后，先在自身的缓存中查询有没有被解析过的域名对应的 ip 地址，如果有就返回。<br>2、如果浏览器没有命中，就会到本地操作系统的缓存中查询，在 C 盘的 hosts 文件中，如果有就返回。<br>3、如果本地缓存也没有命中，就会像本地域名解析系统（LDNS）发出请求，如果解析成功就返回。<br>4、如果 LDNS 没有命中，则向根服务器（Root Server）发出请求，Root Server 会返回一个顶级域名服务器的地址。（如 com）<br>5、LDNS 收到以后向这个顶级域名服务器继续发出请求，顶级域名服务器收到以后解析，并返回二级域名服务器（Name Server）地址（如 baidu）<br>6、LDNS 缓存这个域名和对应的 ip，并把结果返回给浏览器，浏览器和操作系统都保存在缓存中，解析结束。</li></ul><p>上面这个过程包括了递归和迭代，递归和迭代的区别在于查询的递交者是否改变，递归改变，迭代不变。所以可以看到 1-3 的步骤中是递归查询，4-6 的步骤是迭代查询。当然 DNS 解析也有纯递归和纯迭代，效率可能就没有这种组合的方式高，所以我就不举例了。</p><h3 id="DNS-用的是-TCP-还是-UDP"><a href="#DNS-用的是-TCP-还是-UDP" class="headerlink" title="DNS 用的是 TCP 还是 UDP"></a>DNS 用的是 TCP 还是 UDP</h3><ul><li>在域名解析的时候使用的是 UDP 协议，在区域传输的时候用的是 TCP 协议。<br>域名解析：<br>1、因为 TCP 是面向连接的协议，如果 DNS 使用 TCP，那么每次 DNS 交易都要加上 TCP 三次握手的时间，倘若我们访问一个冷门的网站，LDNS 迭代查询多少个服务器就要多花多少个三次握手的时间。所以我们选择了使用 UDP。<br>2、当然，UDP 也有缺点，由于历史的原因，互联网物理链路上的的最小 MTU 为 576，基于 UDP 传输的 DNS 为了限制报文不超过 576，把 DNS 报文限制在了 512 字节。<strong>如果我们传输超过 512 字节的报文（例如 1000 个字节），UDP 就会截断成 512 字节，后面的 488 字节会被丢弃</strong>。原因是 DNS 没有字段来识别报文 ID，默认只有一个报文，所以多出来的只能被抛弃，所幸的是域名解析传输的报文很小，一般不会超过。<br>当然，由于 UDP 只能传输 512 字节无法携带证书，这就带来了不安全性，我们常见的<strong>DNS 劫持</strong>就是因此产生，DNS 劫持就是攻击 DNS，或者是伪造 DNS 服务器，给客户端返回错误的 ip 地址。<br>3、当然，用上 TCP 就可以安全一点，因为 TCP 可以携带大量的数据，你可以放进签名和证书，就能保证相对的安全，只不过又要考虑上面说到的时间损耗。目前国际上应该用的是 UDP 比较多，DNS 劫持的问题交给服务端和客户端去处理。</li></ul><hr><ul><li>区域传输：<br>1、DNS 的规范规定了 2 种类型的 DNS 服务器，一个叫主 DNS 服务器，一个叫辅助 DNS 服务器。在一个区中主 DNS 服务器从自己本机的数据文件中读取该区的 DNS 数据信息，而辅助 DNS 服务器则从区的主 DNS 服务器中读取该区的 DNS 数据信息。（有点类似于数据库的主从复制）当一个辅助 DNS 服务器启动时，它需要与主 DNS 服务器通信，并加载数据信息，这就叫做区域传输（zone transfer）。<br>2、而由于以下原因，区域传输选择了使用 TCP：<ul><li>辅域名服务器会定时（一般时 3 小时）向主域名服务器进行查询以便了解数据是否有变动。如有变动，则会执行一次区域传送，进行数据同步。因为数据同步传送的数据量比一个请求和应答的数据量要多得多，因此使用的是 TCP 而不是 UDP。</li><li>TCP 是一种可靠的连接，保证了数据的准确性。</li></ul></li></ul><hr><ul><li>最后简单介绍一下 DNS 劫持和 Http 劫持，简单的来说 DNS 劫持就是你输入了 google 的 url，结果浏览器弹出来了百度的页面。而 Http 劫持则是你在笔趣阁看更新的小说，结果右下角一直弹出澳门皇家赌场的广告。<br>DNS 劫持预防：<br>1、如果是个人的话倒是没有预防的必要了（劫持一般面向大型网站，无差别攻击，大家都一样，一般不会特意针对你）。如果被劫持了，可以手动修改 DNS 地址，也可以修改路由器密码。<br>2、如果是公司的话就有必要了，一是可以做个网站监控工具，时刻监控域名有没有被劫持。二是准备多个备用域名，如果首选域名被劫持就换上备用的。三是找网安专家。</li></ul><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><ul><li>TCP 又称传输控制协议，是面向连接的协议。<br><img src="/source/images/TCP.png" alt=""></li></ul><h3 id="TCP-和-UDP-的区别"><a href="#TCP-和-UDP-的区别" class="headerlink" title="TCP 和 UDP 的区别"></a>TCP 和 UDP 的区别</h3><p>-</p><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><h2 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/source/images/timg.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;计算机网络的知识浩瀚如海，迫于时间没能够一本一本细读，只在有需要的时候才翻阅查找，现做个笔记总结一下常见的知识&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;TCP-IP-协议结</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Introduction</title>
    <link href="http://yoursite.com/2020/07/21/hello-world/"/>
    <id>http://yoursite.com/2020/07/21/hello-world/</id>
    <published>2020-07-21T10:54:10.778Z</published>
    <updated>2020-10-20T04:59:28.309Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Some-of-my-thoughts"><a href="#Some-of-my-thoughts" class="headerlink" title="Some of my thoughts"></a>Some of my thoughts</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Some-of-my-thoughts&quot;&gt;&lt;a href=&quot;#Some-of-my-thoughts&quot; class=&quot;headerlink&quot; title=&quot;Some of my thoughts&quot;&gt;&lt;/a&gt;Some of my thoughts&lt;/h3&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
